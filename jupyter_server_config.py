from typing import Listfrom jupyterlab_code_formatter.formatters import (    BaseFormatter,    handle_line_ending_and_magic,    SERVER_FORMATTERS,    logger,)import subprocessc = get_config()  # noqac.ServerApp.open_browser = Falsec.LanguageServerManager.autodetect = Falsec.LanguageServerManager.language_servers = {    "pyright": {        "argv": ["pyright-langserver", "--stdio"],        "languages": ["python"],        "version": 2,        "mime_types": ["text/python", "text/ipython"],        "display_name": "pyright",    },    "ruff": {        "argv": ["ruff", "server", "--preview"],        "languages": ["python"],        "version": 2,        "mime_types": ["text/python", "text/ipython"],        "display_name": "ruff",    },}class RuffFormatFormatter(BaseFormatter):    label = "Apply Ruff Format Formatter"    def __init__(self) -> None:        self.ruff_bin = "ruff"    @property    def importable(self) -> bool:        return True    @handle_line_ending_and_magic    def format_code(        self, code: str, notebook: bool, args: List[str] = [], **options    ) -> str:        # Lint        linting = subprocess.run(            [self.ruff_bin,             "check",             "--fix",             "--extend-select", "I",             "--extend-select", "RUF",             "--extend-select", "SIM",             "--extend-select", "SLF",             "--extend-select", "SIM",             "--extend-select", "A",             "--extend-select", "B",             "--extend-select", "ASYNC",             "--extend-select", "F",             "-"],            input=code,            stdout=subprocess.PIPE,            stderr=subprocess.PIPE,            universal_newlines=True,            encoding="utf-8",        )        print(linting.stderr)                # Format        linted_code = linting.stdout        process = subprocess.run(            [self.ruff_bin, "format", "-"],            input=linted_code,            stdout=subprocess.PIPE,            stderr=subprocess.PIPE,            universal_newlines=True,            encoding="utf-8",        )        if process.stderr:            logger.info(process.stderr)            return code        else:            return process.stdoutSERVER_FORMATTERS["ruff_format"] = RuffFormatFormatter()c.JupyterLabCodeFormatter.format_on_save = True